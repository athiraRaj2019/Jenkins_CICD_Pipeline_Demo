  pipeline{
  
      agent any

      tools {
          maven 'MAVEN_HOME'
          }

      options {
          buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
            }
            
      environment {
          JOB_NAME='test1-pipeline'
          GIT_URL='https://github.com/athiraRaj2019/SimpleMavenJunitWebApp.git'
          PROJECT_NAME='SimpleMavenJunitWebApp'
          NEXUS_USER='admin'
          NEXUS_PSWD='admin123'
          NEXUS_SNAP_LINK='http://34.74.31.44:8081/repository/poc-snapshot/'
          PACKAGING='war'
          TOMCAT_SERVER_IP='35.229.99.121'
                }

      stages{
          stage('CloneSCM'){
              steps{
                  echo 'Cloning from github'
                  git url:GIT_URL
              }
          }
          stage("Build"){
              steps{
                  echo 'Building'
                  sh 'mvn clean install'
              }
          }
          stage('SonarAnalysis'){
              steps{
                  echo 'SonarAnalysis'
                  withSonarQubeEnv('SonarQube'){
                      sh 'mvn sonar:sonar'
                  }
              }
          }
          stage('Publish'){
              steps{
                  echo 'Publishing snapshot to nexus'
                  sh 'curl -v -u $NEXUS_USER:$NEXUS_PSWD --upload-file /var/lib/jenkins/workspace/$JOB_NAME/target/$PROJECT_NAME.$PACKAGING $NEXUS_SNAP_LINK'
              }
          }
          stage('Deploy'){
            steps{
                echo 'Deploying to tomcat'
                sh '''
                wget $NEXUS_SNAP_LINK/$PROJECT_NAME.$PACKAGING
                scp $PROJECT_NAME.$PACKAGING $TOMCAT_SERVER_IP:/opt/tomcat/apache-tomcat-8.5.40/webapps
                rm $PROJECT_NAME.$PACKAGING
                '''
                }
              }

        stage('CleanWorkspace'){
            steps{
              echo 'Cleaning workspace'
                cleanWs()
                }
              }
      }
  }
